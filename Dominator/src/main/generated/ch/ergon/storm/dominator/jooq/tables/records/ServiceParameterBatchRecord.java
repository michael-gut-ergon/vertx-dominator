/**
 * This class is generated by jOOQ
 */
package ch.ergon.storm.dominator.jooq.tables.records;


import ch.ergon.storm.dominator.jooq.tables.ServiceParameterBatch;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceParameterBatchRecord extends UpdatableRecordImpl<ServiceParameterBatchRecord> implements Record2<Integer, Timestamp> {

    private static final long serialVersionUID = -1957433163;

    /**
     * Setter for <code>sab.service_parameter_batch.id</code>.
     */
    public ServiceParameterBatchRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sab.service_parameter_batch.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sab.service_parameter_batch.created</code>.
     */
    public ServiceParameterBatchRecord setCreated(Timestamp value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sab.service_parameter_batch.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Timestamp> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Timestamp> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ServiceParameterBatch.SERVICE_PARAMETER_BATCH.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return ServiceParameterBatch.SERVICE_PARAMETER_BATCH.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceParameterBatchRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceParameterBatchRecord value2(Timestamp value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceParameterBatchRecord values(Integer value1, Timestamp value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ServiceParameterBatchRecord
     */
    public ServiceParameterBatchRecord() {
        super(ServiceParameterBatch.SERVICE_PARAMETER_BATCH);
    }

    /**
     * Create a detached, initialised ServiceParameterBatchRecord
     */
    public ServiceParameterBatchRecord(Integer id, Timestamp created) {
        super(ServiceParameterBatch.SERVICE_PARAMETER_BATCH);

        set(0, id);
        set(1, created);
    }
}
