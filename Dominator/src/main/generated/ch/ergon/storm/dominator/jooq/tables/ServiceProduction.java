/**
 * This class is generated by jOOQ
 */
package ch.ergon.storm.dominator.jooq.tables;


import ch.ergon.storm.dominator.jooq.Keys;
import ch.ergon.storm.dominator.jooq.Sab;
import ch.ergon.storm.dominator.jooq.tables.records.ServiceProductionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceProduction extends TableImpl<ServiceProductionRecord> {

    private static final long serialVersionUID = -1668598252;

    /**
     * The reference instance of <code>sab.service_production</code>
     */
    public static final ServiceProduction SERVICE_PRODUCTION = new ServiceProduction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServiceProductionRecord> getRecordType() {
        return ServiceProductionRecord.class;
    }

    /**
     * The column <code>sab.service_production.id</code>.
     */
    public final TableField<ServiceProductionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('service_production_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>sab.service_production.name</code>.
     */
    public final TableField<ServiceProductionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(250).nullable(false), this, "");

    /**
     * The column <code>sab.service_production.uuid</code>.
     */
    public final TableField<ServiceProductionRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(250).nullable(false), this, "");

    /**
     * The column <code>sab.service_production.product</code>.
     */
    public final TableField<ServiceProductionRecord, Integer> PRODUCT = createField("product", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sab.service_production.factory</code>.
     */
    public final TableField<ServiceProductionRecord, Integer> FACTORY = createField("factory", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sab.service_production.inserted</code>.
     */
    public final TableField<ServiceProductionRecord, Timestamp> INSERTED = createField("inserted", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>sab.service_production.useri</code>.
     */
    public final TableField<ServiceProductionRecord, String> USERI = createField("useri", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>sab.service_production.updated</code>.
     */
    public final TableField<ServiceProductionRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>sab.service_production.useru</code>.
     */
    public final TableField<ServiceProductionRecord, String> USERU = createField("useru", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * Create a <code>sab.service_production</code> table reference
     */
    public ServiceProduction() {
        this("service_production", null);
    }

    /**
     * Create an aliased <code>sab.service_production</code> table reference
     */
    public ServiceProduction(String alias) {
        this(alias, SERVICE_PRODUCTION);
    }

    private ServiceProduction(String alias, Table<ServiceProductionRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServiceProduction(String alias, Table<ServiceProductionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sab.SAB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ServiceProductionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SERVICE_PRODUCTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServiceProductionRecord> getPrimaryKey() {
        return Keys.SERVICE_PRODUCTION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServiceProductionRecord>> getKeys() {
        return Arrays.<UniqueKey<ServiceProductionRecord>>asList(Keys.SERVICE_PRODUCTION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceProduction as(String alias) {
        return new ServiceProduction(alias, this);
    }

    /**
     * Rename this table
     */
    public ServiceProduction rename(String name) {
        return new ServiceProduction(name, null);
    }
}
