/**
 * This class is generated by jOOQ
 */
package ch.ergon.storm.dominator.jooq;


import ch.ergon.storm.dominator.jooq.tables.Customer;
import ch.ergon.storm.dominator.jooq.tables.Factory;
import ch.ergon.storm.dominator.jooq.tables.Product;
import ch.ergon.storm.dominator.jooq.tables.SchemaVersion;
import ch.ergon.storm.dominator.jooq.tables.Service;
import ch.ergon.storm.dominator.jooq.tables.ServiceHistory;
import ch.ergon.storm.dominator.jooq.tables.ServiceOrder;
import ch.ergon.storm.dominator.jooq.tables.ServiceParameter;
import ch.ergon.storm.dominator.jooq.tables.ServiceParameterBatch;
import ch.ergon.storm.dominator.jooq.tables.ServiceProduction;
import ch.ergon.storm.dominator.jooq.tables.records.CustomerRecord;
import ch.ergon.storm.dominator.jooq.tables.records.FactoryRecord;
import ch.ergon.storm.dominator.jooq.tables.records.ProductRecord;
import ch.ergon.storm.dominator.jooq.tables.records.SchemaVersionRecord;
import ch.ergon.storm.dominator.jooq.tables.records.ServiceHistoryRecord;
import ch.ergon.storm.dominator.jooq.tables.records.ServiceOrderRecord;
import ch.ergon.storm.dominator.jooq.tables.records.ServiceParameterBatchRecord;
import ch.ergon.storm.dominator.jooq.tables.records.ServiceParameterRecord;
import ch.ergon.storm.dominator.jooq.tables.records.ServiceProductionRecord;
import ch.ergon.storm.dominator.jooq.tables.records.ServiceRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>sab</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CustomerRecord, Integer> IDENTITY_CUSTOMER = Identities0.IDENTITY_CUSTOMER;
    public static final Identity<FactoryRecord, Integer> IDENTITY_FACTORY = Identities0.IDENTITY_FACTORY;
    public static final Identity<ProductRecord, Integer> IDENTITY_PRODUCT = Identities0.IDENTITY_PRODUCT;
    public static final Identity<ServiceRecord, Integer> IDENTITY_SERVICE = Identities0.IDENTITY_SERVICE;
    public static final Identity<ServiceHistoryRecord, Integer> IDENTITY_SERVICE_HISTORY = Identities0.IDENTITY_SERVICE_HISTORY;
    public static final Identity<ServiceOrderRecord, Integer> IDENTITY_SERVICE_ORDER = Identities0.IDENTITY_SERVICE_ORDER;
    public static final Identity<ServiceParameterRecord, Integer> IDENTITY_SERVICE_PARAMETER = Identities0.IDENTITY_SERVICE_PARAMETER;
    public static final Identity<ServiceParameterBatchRecord, Integer> IDENTITY_SERVICE_PARAMETER_BATCH = Identities0.IDENTITY_SERVICE_PARAMETER_BATCH;
    public static final Identity<ServiceProductionRecord, Integer> IDENTITY_SERVICE_PRODUCTION = Identities0.IDENTITY_SERVICE_PRODUCTION;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CustomerRecord> CUSTOMER_PKEY = UniqueKeys0.CUSTOMER_PKEY;
    public static final UniqueKey<FactoryRecord> FACTORY_PKEY = UniqueKeys0.FACTORY_PKEY;
    public static final UniqueKey<ProductRecord> PRODUCT_PKEY = UniqueKeys0.PRODUCT_PKEY;
    public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PK = UniqueKeys0.SCHEMA_VERSION_PK;
    public static final UniqueKey<ServiceRecord> SERVICE_PKEY = UniqueKeys0.SERVICE_PKEY;
    public static final UniqueKey<ServiceHistoryRecord> SERVICE_HISTORY_PKEY = UniqueKeys0.SERVICE_HISTORY_PKEY;
    public static final UniqueKey<ServiceOrderRecord> SERVICE_ORDER_PKEY = UniqueKeys0.SERVICE_ORDER_PKEY;
    public static final UniqueKey<ServiceParameterRecord> SERVICE_PARAMETER_PKEY = UniqueKeys0.SERVICE_PARAMETER_PKEY;
    public static final UniqueKey<ServiceParameterBatchRecord> SERVICE_PARAMETER_BATCH_PKEY = UniqueKeys0.SERVICE_PARAMETER_BATCH_PKEY;
    public static final UniqueKey<ServiceProductionRecord> SERVICE_PRODUCTION_PKEY = UniqueKeys0.SERVICE_PRODUCTION_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<CustomerRecord, Integer> IDENTITY_CUSTOMER = createIdentity(Customer.CUSTOMER, Customer.CUSTOMER.ID);
        public static Identity<FactoryRecord, Integer> IDENTITY_FACTORY = createIdentity(Factory.FACTORY, Factory.FACTORY.ID);
        public static Identity<ProductRecord, Integer> IDENTITY_PRODUCT = createIdentity(Product.PRODUCT, Product.PRODUCT.ID);
        public static Identity<ServiceRecord, Integer> IDENTITY_SERVICE = createIdentity(Service.SERVICE, Service.SERVICE.ID);
        public static Identity<ServiceHistoryRecord, Integer> IDENTITY_SERVICE_HISTORY = createIdentity(ServiceHistory.SERVICE_HISTORY, ServiceHistory.SERVICE_HISTORY.ID);
        public static Identity<ServiceOrderRecord, Integer> IDENTITY_SERVICE_ORDER = createIdentity(ServiceOrder.SERVICE_ORDER, ServiceOrder.SERVICE_ORDER.ID);
        public static Identity<ServiceParameterRecord, Integer> IDENTITY_SERVICE_PARAMETER = createIdentity(ServiceParameter.SERVICE_PARAMETER, ServiceParameter.SERVICE_PARAMETER.ID);
        public static Identity<ServiceParameterBatchRecord, Integer> IDENTITY_SERVICE_PARAMETER_BATCH = createIdentity(ServiceParameterBatch.SERVICE_PARAMETER_BATCH, ServiceParameterBatch.SERVICE_PARAMETER_BATCH.ID);
        public static Identity<ServiceProductionRecord, Integer> IDENTITY_SERVICE_PRODUCTION = createIdentity(ServiceProduction.SERVICE_PRODUCTION, ServiceProduction.SERVICE_PRODUCTION.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<CustomerRecord> CUSTOMER_PKEY = createUniqueKey(Customer.CUSTOMER, "customer_pkey", Customer.CUSTOMER.ID);
        public static final UniqueKey<FactoryRecord> FACTORY_PKEY = createUniqueKey(Factory.FACTORY, "factory_pkey", Factory.FACTORY.ID);
        public static final UniqueKey<ProductRecord> PRODUCT_PKEY = createUniqueKey(Product.PRODUCT, "product_pkey", Product.PRODUCT.ID);
        public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PK = createUniqueKey(SchemaVersion.SCHEMA_VERSION, "schema_version_pk", SchemaVersion.SCHEMA_VERSION.INSTALLED_RANK);
        public static final UniqueKey<ServiceRecord> SERVICE_PKEY = createUniqueKey(Service.SERVICE, "service_pkey", Service.SERVICE.ID);
        public static final UniqueKey<ServiceHistoryRecord> SERVICE_HISTORY_PKEY = createUniqueKey(ServiceHistory.SERVICE_HISTORY, "service_history_pkey", ServiceHistory.SERVICE_HISTORY.ID);
        public static final UniqueKey<ServiceOrderRecord> SERVICE_ORDER_PKEY = createUniqueKey(ServiceOrder.SERVICE_ORDER, "service_order_pkey", ServiceOrder.SERVICE_ORDER.ID);
        public static final UniqueKey<ServiceParameterRecord> SERVICE_PARAMETER_PKEY = createUniqueKey(ServiceParameter.SERVICE_PARAMETER, "service_parameter_pkey", ServiceParameter.SERVICE_PARAMETER.ID);
        public static final UniqueKey<ServiceParameterBatchRecord> SERVICE_PARAMETER_BATCH_PKEY = createUniqueKey(ServiceParameterBatch.SERVICE_PARAMETER_BATCH, "service_parameter_batch_pkey", ServiceParameterBatch.SERVICE_PARAMETER_BATCH.ID);
        public static final UniqueKey<ServiceProductionRecord> SERVICE_PRODUCTION_PKEY = createUniqueKey(ServiceProduction.SERVICE_PRODUCTION, "service_production_pkey", ServiceProduction.SERVICE_PRODUCTION.ID);
    }
}
