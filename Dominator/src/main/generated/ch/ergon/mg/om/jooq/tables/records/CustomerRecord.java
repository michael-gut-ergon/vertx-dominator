/**
 * This class is generated by jOOQ
 */
package ch.ergon.mg.om.jooq.tables.records;


import ch.ergon.mg.om.jooq.tables.Customer;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerRecord extends UpdatableRecordImpl<CustomerRecord> implements Record8<Integer, String, String, Boolean, Timestamp, String, Timestamp, String> {

    private static final long serialVersionUID = -167391655;

    /**
     * Setter for <code>sab.customer.id</code>.
     */
    public CustomerRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sab.customer.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sab.customer.name</code>.
     */
    public CustomerRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sab.customer.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sab.customer.ext_id</code>.
     */
    public CustomerRecord setExtId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>sab.customer.ext_id</code>.
     */
    public String getExtId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sab.customer.has_active_services</code>.
     */
    public CustomerRecord setHasActiveServices(Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>sab.customer.has_active_services</code>.
     */
    public Boolean getHasActiveServices() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>sab.customer.inserted</code>.
     */
    public CustomerRecord setInserted(Timestamp value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>sab.customer.inserted</code>.
     */
    public Timestamp getInserted() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>sab.customer.useri</code>.
     */
    public CustomerRecord setUseri(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>sab.customer.useri</code>.
     */
    public String getUseri() {
        return (String) get(5);
    }

    /**
     * Setter for <code>sab.customer.updated</code>.
     */
    public CustomerRecord setUpdated(Timestamp value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>sab.customer.updated</code>.
     */
    public Timestamp getUpdated() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>sab.customer.useru</code>.
     */
    public CustomerRecord setUseru(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>sab.customer.useru</code>.
     */
    public String getUseru() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, Boolean, Timestamp, String, Timestamp, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, Boolean, Timestamp, String, Timestamp, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Customer.CUSTOMER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Customer.CUSTOMER.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Customer.CUSTOMER.EXT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return Customer.CUSTOMER.HAS_ACTIVE_SERVICES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Customer.CUSTOMER.INSERTED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Customer.CUSTOMER.USERI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Customer.CUSTOMER.UPDATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Customer.CUSTOMER.USERU;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getExtId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getHasActiveServices();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getInserted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getUseri();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getUseru();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value3(String value) {
        setExtId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value4(Boolean value) {
        setHasActiveServices(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value5(Timestamp value) {
        setInserted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value6(String value) {
        setUseri(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value7(Timestamp value) {
        setUpdated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord value8(String value) {
        setUseru(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerRecord values(Integer value1, String value2, String value3, Boolean value4, Timestamp value5, String value6, Timestamp value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerRecord
     */
    public CustomerRecord() {
        super(Customer.CUSTOMER);
    }

    /**
     * Create a detached, initialised CustomerRecord
     */
    public CustomerRecord(Integer id, String name, String extId, Boolean hasActiveServices, Timestamp inserted, String useri, Timestamp updated, String useru) {
        super(Customer.CUSTOMER);

        set(0, id);
        set(1, name);
        set(2, extId);
        set(3, hasActiveServices);
        set(4, inserted);
        set(5, useri);
        set(6, updated);
        set(7, useru);
    }
}
