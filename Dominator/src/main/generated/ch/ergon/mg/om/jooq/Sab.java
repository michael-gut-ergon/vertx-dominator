/**
 * This class is generated by jOOQ
 */
package ch.ergon.mg.om.jooq;


import ch.ergon.mg.om.jooq.tables.Customer;
import ch.ergon.mg.om.jooq.tables.Factory;
import ch.ergon.mg.om.jooq.tables.Product;
import ch.ergon.mg.om.jooq.tables.SchemaVersion;
import ch.ergon.mg.om.jooq.tables.Service;
import ch.ergon.mg.om.jooq.tables.ServiceHistory;
import ch.ergon.mg.om.jooq.tables.ServiceOrder;
import ch.ergon.mg.om.jooq.tables.ServiceParameter;
import ch.ergon.mg.om.jooq.tables.ServiceParameterBatch;
import ch.ergon.mg.om.jooq.tables.ServiceProduction;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sab extends SchemaImpl {

    private static final long serialVersionUID = -1213286197;

    /**
     * The reference instance of <code>sab</code>
     */
    public static final Sab SAB = new Sab();

    /**
     * The table <code>sab.customer</code>.
     */
    public final Customer CUSTOMER = ch.ergon.mg.om.jooq.tables.Customer.CUSTOMER;

    /**
     * The table <code>sab.factory</code>.
     */
    public final Factory FACTORY = ch.ergon.mg.om.jooq.tables.Factory.FACTORY;

    /**
     * The table <code>sab.product</code>.
     */
    public final Product PRODUCT = ch.ergon.mg.om.jooq.tables.Product.PRODUCT;

    /**
     * The table <code>sab.schema_version</code>.
     */
    public final SchemaVersion SCHEMA_VERSION = ch.ergon.mg.om.jooq.tables.SchemaVersion.SCHEMA_VERSION;

    /**
     * The table <code>sab.service</code>.
     */
    public final Service SERVICE = ch.ergon.mg.om.jooq.tables.Service.SERVICE;

    /**
     * The table <code>sab.service_history</code>.
     */
    public final ServiceHistory SERVICE_HISTORY = ch.ergon.mg.om.jooq.tables.ServiceHistory.SERVICE_HISTORY;

    /**
     * The table <code>sab.service_order</code>.
     */
    public final ServiceOrder SERVICE_ORDER = ch.ergon.mg.om.jooq.tables.ServiceOrder.SERVICE_ORDER;

    /**
     * The table <code>sab.service_parameter</code>.
     */
    public final ServiceParameter SERVICE_PARAMETER = ch.ergon.mg.om.jooq.tables.ServiceParameter.SERVICE_PARAMETER;

    /**
     * The table <code>sab.service_parameter_batch</code>.
     */
    public final ServiceParameterBatch SERVICE_PARAMETER_BATCH = ch.ergon.mg.om.jooq.tables.ServiceParameterBatch.SERVICE_PARAMETER_BATCH;

    /**
     * The table <code>sab.service_production</code>.
     */
    public final ServiceProduction SERVICE_PRODUCTION = ch.ergon.mg.om.jooq.tables.ServiceProduction.SERVICE_PRODUCTION;

    /**
     * No further instances allowed
     */
    private Sab() {
        super("sab", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.CUSTOMER_ID_SEQ,
            Sequences.FACTORY_ID_SEQ,
            Sequences.PRODUCT_ID_SEQ,
            Sequences.SERVICE_HISTORY_ID_SEQ,
            Sequences.SERVICE_ID_SEQ,
            Sequences.SERVICE_ORDER_ID_SEQ,
            Sequences.SERVICE_PARAMETER_BATCH_ID_SEQ,
            Sequences.SERVICE_PARAMETER_ID_SEQ,
            Sequences.SERVICE_PRODUCTION_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Customer.CUSTOMER,
            Factory.FACTORY,
            Product.PRODUCT,
            SchemaVersion.SCHEMA_VERSION,
            Service.SERVICE,
            ServiceHistory.SERVICE_HISTORY,
            ServiceOrder.SERVICE_ORDER,
            ServiceParameter.SERVICE_PARAMETER,
            ServiceParameterBatch.SERVICE_PARAMETER_BATCH,
            ServiceProduction.SERVICE_PRODUCTION);
    }
}
