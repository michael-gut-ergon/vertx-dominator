CREATE TYPE ORDER_STATE AS ENUM ('CREATED', 'IN_PRODUCTION', 'FINISHED', 'DEPROVISIONING', 'ABORTED');
CREATE TYPE SERVICE_STATE AS ENUM ('INSERTED', 'STARTED', 'SUSPENDED', 'CANCELLED', 'DOWN');
CREATE TYPE SERVICE_PARAMETER_TYPE AS ENUM ('string', 'int', 'float', 'boolean', 'date', 'list', 'text', 'ipaddress', 'phonenumber');
CREATE TYPE FACTORY_TYPE AS ENUM ('INTERNAL', 'EXTERNAL');
CREATE TYPE FACTORY_PARAMETER_TYPE AS ENUM ('URL.PARAMETER', 'BODY.JSON', 'BODY.NAME_VALUE');

CREATE TABLE SERVICE_ORDER (
	ID SERIAL,
	NAME VARCHAR(250) NOT NULL,
	UUID VARCHAR(250) NOT NULL,
	EXT_ID VARCHAR(250),
	CUSTOMER INTEGER,
	PRODUCT INTEGER NOT NULL,
	SERVICE_PARAMETER INTEGER,
	PRODUCTION_START TIMESTAMP,
	PRODUCTION_END TIMESTAMP,
	STATE ORDER_STATE NOT NULL,
	INSERTED TIMESTAMP NOT NULL,
	USERI VARCHAR(50) NOT NULL,
	UPDATED TIMESTAMP,
	USERU VARCHAR(50),
PRIMARY KEY (ID));

CREATE TABLE CUSTOMER (
	ID SERIAL,
	NAME VARCHAR(250) NOT NULL,
	EXT_ID VARCHAR(250),
	HAS_ACTIVE_SERVICES BOOLEAN,
	INSERTED TIMESTAMP NOT NULL,
	USERI VARCHAR(50) NOT NULL,
	UPDATED TIMESTAMP,
	USERU VARCHAR(50),
PRIMARY KEY (ID));

CREATE TABLE SERVICE (
	ID SERIAL,
	NAME VARCHAR(250) NOT NULL,
	UUID VARCHAR(250) NOT NULL,
	EXT_ID VARCHAR(250),
	CUSTOMER INTEGER,
	SERVICE_PARAMETER INTEGER,
	VALID_FROM TIMESTAMP,
	VALID_UNTIL TIMESTAMP,
	STATE SERVICE_STATE NOT NULL,
	INSERTED TIMESTAMP NOT NULL,
	USERI VARCHAR(50) NOT NULL,
	UPDATED TIMESTAMP,
	USERU VARCHAR(50),
PRIMARY KEY (ID));

CREATE TABLE PRODUCT (
	ID SERIAL,
	NAME VARCHAR(250) NOT NULL,
	UUID VARCHAR(250) NOT NULL,
	EXT_ID VARCHAR(250),
	ROOT_PRODUCT INTEGER,
	VALID_FROM TIMESTAMP,
	VALID_UNTIL TIMESTAMP,
	INSERTED TIMESTAMP NOT NULL,
	USERI VARCHAR(50) NOT NULL,
	UPDATED TIMESTAMP,
	USERU VARCHAR(50),
PRIMARY KEY (ID));

CREATE TABLE SERVICE_PRODUCTION (
	ID SERIAL,
	NAME VARCHAR(250) NOT NULL,
	UUID VARCHAR(250) NOT NULL,
	PRODUCT INTEGER NOT NULL,
	FACTORY INTEGER,
	INSERTED TIMESTAMP NOT NULL,
	USERI VARCHAR(50) NOT NULL,
	UPDATED TIMESTAMP,
	USERU VARCHAR(50),
PRIMARY KEY (ID));

CREATE TABLE SERVICE_HISTORY (
	ID SERIAL,
	SERVICE INTEGER NOT NULL,
	DESCRIPTION VARCHAR(250) NOT NULL,
	VALID_FROM TIMESTAMP,
	VALID_UNTIL TIMESTAMP,
	STATE SERVICE_STATE NOT NULL,
	INSERTED TIMESTAMP NOT NULL,
	USERI VARCHAR(50) NOT NULL,
	UPDATED TIMESTAMP,
	USERU VARCHAR(50),
PRIMARY KEY (ID));

CREATE TABLE SERVICE_PARAMETER_BATCH (
	ID SERIAL,
	CREATED TIMESTAMP NOT NULL,
PRIMARY KEY (ID));

CREATE TABLE SERVICE_PARAMETER (
	ID SERIAL,
	SERVICE_PARAMETER_BATCH INTEGER NOT NULL,
	NAME VARCHAR(250) NOT NULL,
	PARAMETER_VALUE VARCHAR(250) NOT NULL,
	PARAMETER_TYPE SERVICE_PARAMETER_TYPE NOT NULL,
	UUID VARCHAR(250) NOT NULL,
	EXT_ID VARCHAR(250),
	INSERTED TIMESTAMP NOT NULL,
	USERI VARCHAR(50) NOT NULL,
	UPDATED TIMESTAMP,
	USERU VARCHAR(50),
PRIMARY KEY (ID));

CREATE TABLE FACTORY (
	ID SERIAL,
	NAME VARCHAR(250) NOT NULL,
	FACTORY_TYPE FACTORY_TYPE NOT NULL,
	PARAMETER_TYPE FACTORY_PARAMETER_TYPE NOT NULL,
	SERVER VARCHAR(250),
	PORT INTEGER,
	CREATE_URL VARCHAR(250),
	CANCEL_URL VARCHAR(250),
	ACTIVATE_URL VARCHAR(250),
	SUSPEND_URL VARCHAR(250),
	UPDATE_URL VARCHAR(250),
	MONITORING_URL VARCHAR(250),
	MONITORING_PORT INTEGER,
	INSERTED TIMESTAMP NOT NULL,
	USERI VARCHAR(50) NOT NULL,
	UPDATED TIMESTAMP,
	USERU VARCHAR(50),
PRIMARY KEY (ID));
